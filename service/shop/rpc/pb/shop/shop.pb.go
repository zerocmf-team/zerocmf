// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: pb/shop.proto

package shop

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MigrateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId int64 `protobuf:"varint,1,opt,name=siteId,proto3" json:"siteId,omitempty"`
}

func (x *MigrateReq) Reset() {
	*x = MigrateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateReq) ProtoMessage() {}

func (x *MigrateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateReq.ProtoReflect.Descriptor instead.
func (*MigrateReq) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{0}
}

func (x *MigrateReq) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

type MigrateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MigrateReply) Reset() {
	*x = MigrateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateReply) ProtoMessage() {}

func (x *MigrateReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateReply.ProtoReflect.Descriptor instead.
func (*MigrateReply) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{1}
}

type CategoryGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId    int64    `protobuf:"varint,1,opt,name=siteId,proto3" json:"siteId,omitempty"`
	Name      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentId  *int64   `protobuf:"varint,3,opt,name=parentId,proto3,oneof" json:"parentId,omitempty"`
	ListOrder *float64 `protobuf:"fixed64,4,opt,name=listOrder,proto3,oneof" json:"listOrder,omitempty"`
	Status    *int64   `protobuf:"varint,5,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Current   *int32   `protobuf:"varint,6,opt,name=current,proto3,oneof" json:"current,omitempty"`
	PageSize  *int32   `protobuf:"varint,7,opt,name=pageSize,proto3,oneof" json:"pageSize,omitempty"`
}

func (x *CategoryGetReq) Reset() {
	*x = CategoryGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryGetReq) ProtoMessage() {}

func (x *CategoryGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryGetReq.ProtoReflect.Descriptor instead.
func (*CategoryGetReq) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{2}
}

func (x *CategoryGetReq) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

func (x *CategoryGetReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategoryGetReq) GetParentId() int64 {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return 0
}

func (x *CategoryGetReq) GetListOrder() float64 {
	if x != nil && x.ListOrder != nil {
		return *x.ListOrder
	}
	return 0
}

func (x *CategoryGetReq) GetStatus() int64 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CategoryGetReq) GetCurrent() int32 {
	if x != nil && x.Current != nil {
		return *x.Current
	}
	return 0
}

func (x *CategoryGetReq) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

type CategoryTreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status   *int64 `protobuf:"varint,2,opt,name=status,proto3,oneof" json:"status,omitempty"`
	IgnoreId *int64 `protobuf:"varint,3,opt,name=ignoreId,proto3,oneof" json:"ignoreId,omitempty"`
	SiteId   int64  `protobuf:"varint,4,opt,name=siteId,proto3" json:"siteId,omitempty"`
}

func (x *CategoryTreeReq) Reset() {
	*x = CategoryTreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryTreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryTreeReq) ProtoMessage() {}

func (x *CategoryTreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryTreeReq.ProtoReflect.Descriptor instead.
func (*CategoryTreeReq) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{3}
}

func (x *CategoryTreeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategoryTreeReq) GetStatus() int64 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CategoryTreeReq) GetIgnoreId() int64 {
	if x != nil && x.IgnoreId != nil {
		return *x.IgnoreId
	}
	return 0
}

func (x *CategoryTreeReq) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

type CategoryShowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SiteId int64 `protobuf:"varint,2,opt,name=siteId,proto3" json:"siteId,omitempty"`
}

func (x *CategoryShowReq) Reset() {
	*x = CategoryShowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryShowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryShowReq) ProtoMessage() {}

func (x *CategoryShowReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryShowReq.ProtoReflect.Descriptor instead.
func (*CategoryShowReq) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{4}
}

func (x *CategoryShowReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoryShowReq) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

type CategorySaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentId  *int64   `protobuf:"varint,2,opt,name=parentId,proto3,oneof" json:"parentId,omitempty"`
	Name      string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Icon      *string  `protobuf:"bytes,4,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	Desc      *string  `protobuf:"bytes,5,opt,name=desc,proto3,oneof" json:"desc,omitempty"`
	Status    *int64   `protobuf:"varint,6,opt,name=status,proto3,oneof" json:"status,omitempty"`
	ListOrder *float64 `protobuf:"fixed64,7,opt,name=listOrder,proto3,oneof" json:"listOrder,omitempty"`
	SiteId    int64    `protobuf:"varint,8,opt,name=siteId,proto3" json:"siteId,omitempty"`
}

func (x *CategorySaveReq) Reset() {
	*x = CategorySaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategorySaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategorySaveReq) ProtoMessage() {}

func (x *CategorySaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategorySaveReq.ProtoReflect.Descriptor instead.
func (*CategorySaveReq) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{5}
}

func (x *CategorySaveReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategorySaveReq) GetParentId() int64 {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return 0
}

func (x *CategorySaveReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategorySaveReq) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *CategorySaveReq) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *CategorySaveReq) GetStatus() int64 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CategorySaveReq) GetListOrder() float64 {
	if x != nil && x.ListOrder != nil {
		return *x.ListOrder
	}
	return 0
}

func (x *CategorySaveReq) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

type CategoryDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SiteId int64 `protobuf:"varint,2,opt,name=siteId,proto3" json:"siteId,omitempty"`
}

func (x *CategoryDelReq) Reset() {
	*x = CategoryDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryDelReq) ProtoMessage() {}

func (x *CategoryDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryDelReq.ProtoReflect.Descriptor instead.
func (*CategoryDelReq) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{6}
}

func (x *CategoryDelReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoryDelReq) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

type CategoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 创建分类的响应信息
	ProductCategoryId int64   `protobuf:"varint,1,opt,name=productCategoryId,proto3" json:"productCategoryId,omitempty"`
	ParentId          int64   `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Name              string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Path              string  `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Icon              string  `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	Desc              string  `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Status            int64   `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	ListOrder         float64 `protobuf:"fixed64,8,opt,name=listOrder,proto3" json:"listOrder,omitempty"`
	CreatedAt         int64   `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt         int64   `protobuf:"varint,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	CreatedTime       string  `protobuf:"bytes,11,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	UpdatedTime       string  `protobuf:"bytes,12,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
}

func (x *CategoryResp) Reset() {
	*x = CategoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryResp) ProtoMessage() {}

func (x *CategoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryResp.ProtoReflect.Descriptor instead.
func (*CategoryResp) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{7}
}

func (x *CategoryResp) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *CategoryResp) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CategoryResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategoryResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CategoryResp) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CategoryResp) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CategoryResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CategoryResp) GetListOrder() float64 {
	if x != nil {
		return x.ListOrder
	}
	return 0
}

func (x *CategoryResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CategoryResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *CategoryResp) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *CategoryResp) GetUpdatedTime() string {
	if x != nil {
		return x.UpdatedTime
	}
	return ""
}

type CategoryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*CategoryResp `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CategoryListResp) Reset() {
	*x = CategoryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryListResp) ProtoMessage() {}

func (x *CategoryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryListResp.ProtoReflect.Descriptor instead.
func (*CategoryListResp) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{8}
}

func (x *CategoryListResp) GetData() []*CategoryResp {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CategoryListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CategoryTreeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductCategoryId int64               `protobuf:"varint,1,opt,name=productCategoryId,proto3" json:"productCategoryId,omitempty"`
	ParentId          int64               `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Name              string              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Path              string              `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Icon              string              `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	Desc              string              `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Status            int64               `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	ListOrder         float64             `protobuf:"fixed64,8,opt,name=listOrder,proto3" json:"listOrder,omitempty"`
	CreatedAt         int64               `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt         int64               `protobuf:"varint,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	CreatedTime       string              `protobuf:"bytes,11,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	UpdatedTime       string              `protobuf:"bytes,12,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
	Children          []*CategoryTreeData `protobuf:"bytes,13,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *CategoryTreeData) Reset() {
	*x = CategoryTreeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryTreeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryTreeData) ProtoMessage() {}

func (x *CategoryTreeData) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryTreeData.ProtoReflect.Descriptor instead.
func (*CategoryTreeData) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{9}
}

func (x *CategoryTreeData) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *CategoryTreeData) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CategoryTreeData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategoryTreeData) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CategoryTreeData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CategoryTreeData) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CategoryTreeData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CategoryTreeData) GetListOrder() float64 {
	if x != nil {
		return x.ListOrder
	}
	return 0
}

func (x *CategoryTreeData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CategoryTreeData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *CategoryTreeData) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *CategoryTreeData) GetUpdatedTime() string {
	if x != nil {
		return x.UpdatedTime
	}
	return ""
}

func (x *CategoryTreeData) GetChildren() []*CategoryTreeData {
	if x != nil {
		return x.Children
	}
	return nil
}

type CategoryTreeListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CategoryTreeData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CategoryTreeListResp) Reset() {
	*x = CategoryTreeListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryTreeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryTreeListResp) ProtoMessage() {}

func (x *CategoryTreeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryTreeListResp.ProtoReflect.Descriptor instead.
func (*CategoryTreeListResp) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{10}
}

func (x *CategoryTreeListResp) GetData() []*CategoryTreeData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 商品列表
type ProductGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductName     string `protobuf:"bytes,1,opt,name=productName,proto3" json:"productName,omitempty"`
	ProductCategory int64  `protobuf:"varint,2,opt,name=productCategory,proto3" json:"productCategory,omitempty"`
	Status          *int64 `protobuf:"varint,3,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Current         *int32 `protobuf:"varint,4,opt,name=current,proto3,oneof" json:"current,omitempty"`
	PageSize        *int32 `protobuf:"varint,5,opt,name=pageSize,proto3,oneof" json:"pageSize,omitempty"`
	SiteId          int64  `protobuf:"varint,6,opt,name=siteId,proto3" json:"siteId,omitempty"`
}

func (x *ProductGetReq) Reset() {
	*x = ProductGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductGetReq) ProtoMessage() {}

func (x *ProductGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductGetReq.ProtoReflect.Descriptor instead.
func (*ProductGetReq) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{11}
}

func (x *ProductGetReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ProductGetReq) GetProductCategory() int64 {
	if x != nil {
		return x.ProductCategory
	}
	return 0
}

func (x *ProductGetReq) GetStatus() int64 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *ProductGetReq) GetCurrent() int32 {
	if x != nil && x.Current != nil {
		return *x.Current
	}
	return 0
}

func (x *ProductGetReq) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ProductGetReq) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

// 商品详情
type ProductShowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId    int64 `protobuf:"varint,1,opt,name=siteId,proto3" json:"siteId,omitempty"`
	ProductId int64 `protobuf:"varint,2,opt,name=productId,proto3" json:"productId,omitempty"`
}

func (x *ProductShowReq) Reset() {
	*x = ProductShowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductShowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductShowReq) ProtoMessage() {}

func (x *ProductShowReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductShowReq.ProtoReflect.Descriptor instead.
func (*ProductShowReq) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{12}
}

func (x *ProductShowReq) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

func (x *ProductShowReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

// 商品规格
type ProductSku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId         *int64   `protobuf:"varint,1,opt,name=skuId,proto3,oneof" json:"skuId,omitempty"`
	AttrsVal      string   `protobuf:"bytes,2,opt,name=attrsVal,proto3" json:"attrsVal,omitempty"`
	SkuCode       *string  `protobuf:"bytes,3,opt,name=skuCode,proto3,oneof" json:"skuCode,omitempty"`
	SkuBarcode    *string  `protobuf:"bytes,4,opt,name=skuBarcode,proto3,oneof" json:"skuBarcode,omitempty"`
	RetailPrice   float64  `protobuf:"fixed64,5,opt,name=retailPrice,proto3" json:"retailPrice,omitempty"`
	Stock         int64    `protobuf:"varint,6,opt,name=stock,proto3" json:"stock,omitempty"`
	OriginalPrice *float64 `protobuf:"fixed64,7,opt,name=originalPrice,proto3,oneof" json:"originalPrice,omitempty"`
	CostPrice     *float64 `protobuf:"fixed64,8,opt,name=costPrice,proto3,oneof" json:"costPrice,omitempty"`
	Weight        float64  `protobuf:"fixed64,9,opt,name=weight,proto3" json:"weight,omitempty"`
	Status        *int64   `protobuf:"varint,10,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *ProductSku) Reset() {
	*x = ProductSku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSku) ProtoMessage() {}

func (x *ProductSku) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSku.ProtoReflect.Descriptor instead.
func (*ProductSku) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{13}
}

func (x *ProductSku) GetSkuId() int64 {
	if x != nil && x.SkuId != nil {
		return *x.SkuId
	}
	return 0
}

func (x *ProductSku) GetAttrsVal() string {
	if x != nil {
		return x.AttrsVal
	}
	return ""
}

func (x *ProductSku) GetSkuCode() string {
	if x != nil && x.SkuCode != nil {
		return *x.SkuCode
	}
	return ""
}

func (x *ProductSku) GetSkuBarcode() string {
	if x != nil && x.SkuBarcode != nil {
		return *x.SkuBarcode
	}
	return ""
}

func (x *ProductSku) GetRetailPrice() float64 {
	if x != nil {
		return x.RetailPrice
	}
	return 0
}

func (x *ProductSku) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ProductSku) GetOriginalPrice() float64 {
	if x != nil && x.OriginalPrice != nil {
		return *x.OriginalPrice
	}
	return 0
}

func (x *ProductSku) GetCostPrice() float64 {
	if x != nil && x.CostPrice != nil {
		return *x.CostPrice
	}
	return 0
}

func (x *ProductSku) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ProductSku) GetStatus() int64 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type AttributesItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AttributesItem) Reset() {
	*x = AttributesItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributesItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributesItem) ProtoMessage() {}

func (x *AttributesItem) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributesItem.ProtoReflect.Descriptor instead.
func (*AttributesItem) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{14}
}

func (x *AttributesItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Attributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Items []*AttributesItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Attributes) Reset() {
	*x = Attributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attributes) ProtoMessage() {}

func (x *Attributes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attributes.ProtoReflect.Descriptor instead.
func (*Attributes) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{15}
}

func (x *Attributes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attributes) GetItems() []*AttributesItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId           int64         `protobuf:"varint,1,opt,name=productId,proto3" json:"productId,omitempty"`
	ProductName         string        `protobuf:"bytes,2,opt,name=productName,proto3" json:"productName,omitempty"`
	UserId              int64         `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	ProductBarcode      string        `protobuf:"bytes,4,opt,name=productBarcode,proto3" json:"productBarcode,omitempty"`
	ProductCategory     int64         `protobuf:"varint,5,opt,name=productCategory,proto3" json:"productCategory,omitempty"`
	ProductCategoryName string        `protobuf:"bytes,6,opt,name=productCategoryName,proto3" json:"productCategoryName,omitempty"`
	MainVideo           string        `protobuf:"bytes,7,opt,name=mainVideo,proto3" json:"mainVideo,omitempty"`
	ExplanationVideo    string        `protobuf:"bytes,8,opt,name=explanationVideo,proto3" json:"explanationVideo,omitempty"`
	Attributes          []*Attributes `protobuf:"bytes,9,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Price               float64       `protobuf:"fixed64,10,opt,name=price,proto3" json:"price,omitempty"`
	PriceNegotiable     int64         `protobuf:"varint,11,opt,name=priceNegotiable,proto3" json:"priceNegotiable,omitempty"`
	StockUnit           string        `protobuf:"bytes,12,opt,name=stockUnit,proto3" json:"stockUnit,omitempty"`
	Stock               int64         `protobuf:"varint,13,opt,name=stock,proto3" json:"stock,omitempty"`
	ShareDescription    string        `protobuf:"bytes,14,opt,name=shareDescription,proto3" json:"shareDescription,omitempty"`
	ProductSellingPoint string        `protobuf:"bytes,15,opt,name=productSellingPoint,proto3" json:"productSellingPoint,omitempty"`
	OriginalPrice       float64       `protobuf:"fixed64,16,opt,name=originalPrice,proto3" json:"originalPrice,omitempty"`
	CostPrice           float64       `protobuf:"fixed64,17,opt,name=costPrice,proto3" json:"costPrice,omitempty"`
	HideRemainingStock  int32         `protobuf:"varint,18,opt,name=hideRemainingStock,proto3" json:"hideRemainingStock,omitempty"`
	ProductContent      string        `protobuf:"bytes,19,opt,name=productContent,proto3" json:"productContent,omitempty"`
	Status              int64         `protobuf:"varint,20,opt,name=status,proto3" json:"status,omitempty"`
	ProductSku          []*ProductSku `protobuf:"bytes,21,rep,name=productSku,proto3" json:"productSku,omitempty"`
	CreatedAt           int64         `protobuf:"varint,22,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt           int64         `protobuf:"varint,23,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	CreatedTime         string        `protobuf:"bytes,24,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	UpdatedTime         string        `protobuf:"bytes,25,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
	ProductThumbnail    []string      `protobuf:"bytes,26,rep,name=productThumbnail,proto3" json:"productThumbnail,omitempty"`
}

func (x *ProductResp) Reset() {
	*x = ProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductResp) ProtoMessage() {}

func (x *ProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductResp.ProtoReflect.Descriptor instead.
func (*ProductResp) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{16}
}

func (x *ProductResp) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ProductResp) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ProductResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ProductResp) GetProductBarcode() string {
	if x != nil {
		return x.ProductBarcode
	}
	return ""
}

func (x *ProductResp) GetProductCategory() int64 {
	if x != nil {
		return x.ProductCategory
	}
	return 0
}

func (x *ProductResp) GetProductCategoryName() string {
	if x != nil {
		return x.ProductCategoryName
	}
	return ""
}

func (x *ProductResp) GetMainVideo() string {
	if x != nil {
		return x.MainVideo
	}
	return ""
}

func (x *ProductResp) GetExplanationVideo() string {
	if x != nil {
		return x.ExplanationVideo
	}
	return ""
}

func (x *ProductResp) GetAttributes() []*Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ProductResp) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductResp) GetPriceNegotiable() int64 {
	if x != nil {
		return x.PriceNegotiable
	}
	return 0
}

func (x *ProductResp) GetStockUnit() string {
	if x != nil {
		return x.StockUnit
	}
	return ""
}

func (x *ProductResp) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ProductResp) GetShareDescription() string {
	if x != nil {
		return x.ShareDescription
	}
	return ""
}

func (x *ProductResp) GetProductSellingPoint() string {
	if x != nil {
		return x.ProductSellingPoint
	}
	return ""
}

func (x *ProductResp) GetOriginalPrice() float64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *ProductResp) GetCostPrice() float64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *ProductResp) GetHideRemainingStock() int32 {
	if x != nil {
		return x.HideRemainingStock
	}
	return 0
}

func (x *ProductResp) GetProductContent() string {
	if x != nil {
		return x.ProductContent
	}
	return ""
}

func (x *ProductResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ProductResp) GetProductSku() []*ProductSku {
	if x != nil {
		return x.ProductSku
	}
	return nil
}

func (x *ProductResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ProductResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ProductResp) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *ProductResp) GetUpdatedTime() string {
	if x != nil {
		return x.UpdatedTime
	}
	return ""
}

func (x *ProductResp) GetProductThumbnail() []string {
	if x != nil {
		return x.ProductThumbnail
	}
	return nil
}

type ProductListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*ProductResp `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ProductListResp) Reset() {
	*x = ProductListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListResp) ProtoMessage() {}

func (x *ProductListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListResp.ProtoReflect.Descriptor instead.
func (*ProductListResp) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{17}
}

func (x *ProductListResp) GetData() []*ProductResp {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ProductListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 保存商品
type ProductSaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId           *int64        `protobuf:"varint,1,opt,name=productId,proto3,oneof" json:"productId,omitempty"`
	ProductName         string        `protobuf:"bytes,2,opt,name=productName,proto3" json:"productName,omitempty"`
	UserId              int64         `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	ProductBarcode      *string       `protobuf:"bytes,4,opt,name=productBarcode,proto3,oneof" json:"productBarcode,omitempty"`
	ProductCategory     int64         `protobuf:"varint,5,opt,name=productCategory,proto3" json:"productCategory,omitempty"`
	MainVideo           *string       `protobuf:"bytes,6,opt,name=mainVideo,proto3,oneof" json:"mainVideo,omitempty"`
	ExplanationVideo    *string       `protobuf:"bytes,7,opt,name=explanationVideo,proto3,oneof" json:"explanationVideo,omitempty"`
	Attributes          string        `protobuf:"bytes,8,opt,name=attributes,proto3" json:"attributes,omitempty"`
	Price               float64       `protobuf:"fixed64,9,opt,name=price,proto3" json:"price,omitempty"`
	StockUnit           string        `protobuf:"bytes,10,opt,name=stockUnit,proto3" json:"stockUnit,omitempty"`
	Stock               int64         `protobuf:"varint,11,opt,name=stock,proto3" json:"stock,omitempty"`
	ShareDescription    string        `protobuf:"bytes,12,opt,name=shareDescription,proto3" json:"shareDescription,omitempty"`
	ProductSellingPoint string        `protobuf:"bytes,13,opt,name=productSellingPoint,proto3" json:"productSellingPoint,omitempty"`
	OriginalPrice       float64       `protobuf:"fixed64,14,opt,name=originalPrice,proto3" json:"originalPrice,omitempty"`
	CostPrice           float64       `protobuf:"fixed64,15,opt,name=costPrice,proto3" json:"costPrice,omitempty"`
	HideRemainingStock  int32         `protobuf:"varint,16,opt,name=hideRemainingStock,proto3" json:"hideRemainingStock,omitempty"`
	DeliveryMethod      int32         `protobuf:"varint,17,opt,name=deliveryMethod,proto3" json:"deliveryMethod,omitempty"`
	ProductContent      string        `protobuf:"bytes,18,opt,name=productContent,proto3" json:"productContent,omitempty"`
	Status              *int64        `protobuf:"varint,19,opt,name=status,proto3,oneof" json:"status,omitempty"`
	ProductSku          []*ProductSku `protobuf:"bytes,20,rep,name=productSku,proto3" json:"productSku,omitempty"`
	SiteId              int64         `protobuf:"varint,21,opt,name=siteId,proto3" json:"siteId,omitempty"`
	PriceNegotiable     int64         `protobuf:"varint,22,opt,name=PriceNegotiable,proto3" json:"PriceNegotiable,omitempty"`
	ProductThumbnail    []string      `protobuf:"bytes,23,rep,name=productThumbnail,proto3" json:"productThumbnail,omitempty"`
}

func (x *ProductSaveReq) Reset() {
	*x = ProductSaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSaveReq) ProtoMessage() {}

func (x *ProductSaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSaveReq.ProtoReflect.Descriptor instead.
func (*ProductSaveReq) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{18}
}

func (x *ProductSaveReq) GetProductId() int64 {
	if x != nil && x.ProductId != nil {
		return *x.ProductId
	}
	return 0
}

func (x *ProductSaveReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ProductSaveReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ProductSaveReq) GetProductBarcode() string {
	if x != nil && x.ProductBarcode != nil {
		return *x.ProductBarcode
	}
	return ""
}

func (x *ProductSaveReq) GetProductCategory() int64 {
	if x != nil {
		return x.ProductCategory
	}
	return 0
}

func (x *ProductSaveReq) GetMainVideo() string {
	if x != nil && x.MainVideo != nil {
		return *x.MainVideo
	}
	return ""
}

func (x *ProductSaveReq) GetExplanationVideo() string {
	if x != nil && x.ExplanationVideo != nil {
		return *x.ExplanationVideo
	}
	return ""
}

func (x *ProductSaveReq) GetAttributes() string {
	if x != nil {
		return x.Attributes
	}
	return ""
}

func (x *ProductSaveReq) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductSaveReq) GetStockUnit() string {
	if x != nil {
		return x.StockUnit
	}
	return ""
}

func (x *ProductSaveReq) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ProductSaveReq) GetShareDescription() string {
	if x != nil {
		return x.ShareDescription
	}
	return ""
}

func (x *ProductSaveReq) GetProductSellingPoint() string {
	if x != nil {
		return x.ProductSellingPoint
	}
	return ""
}

func (x *ProductSaveReq) GetOriginalPrice() float64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *ProductSaveReq) GetCostPrice() float64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *ProductSaveReq) GetHideRemainingStock() int32 {
	if x != nil {
		return x.HideRemainingStock
	}
	return 0
}

func (x *ProductSaveReq) GetDeliveryMethod() int32 {
	if x != nil {
		return x.DeliveryMethod
	}
	return 0
}

func (x *ProductSaveReq) GetProductContent() string {
	if x != nil {
		return x.ProductContent
	}
	return ""
}

func (x *ProductSaveReq) GetStatus() int64 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *ProductSaveReq) GetProductSku() []*ProductSku {
	if x != nil {
		return x.ProductSku
	}
	return nil
}

func (x *ProductSaveReq) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

func (x *ProductSaveReq) GetPriceNegotiable() int64 {
	if x != nil {
		return x.PriceNegotiable
	}
	return 0
}

func (x *ProductSaveReq) GetProductThumbnail() []string {
	if x != nil {
		return x.ProductThumbnail
	}
	return nil
}

type ProductSaveResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId   int64  `protobuf:"varint,1,opt,name=productId,proto3" json:"productId,omitempty"`
	ProductName string `protobuf:"bytes,2,opt,name=productName,proto3" json:"productName,omitempty"`
}

func (x *ProductSaveResp) Reset() {
	*x = ProductSaveResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSaveResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSaveResp) ProtoMessage() {}

func (x *ProductSaveResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSaveResp.ProtoReflect.Descriptor instead.
func (*ProductSaveResp) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{19}
}

func (x *ProductSaveResp) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ProductSaveResp) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

type ProductAttrKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	SiteId int64  `protobuf:"varint,2,opt,name=siteId,proto3" json:"siteId,omitempty"`
}

func (x *ProductAttrKeyReq) Reset() {
	*x = ProductAttrKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttrKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttrKeyReq) ProtoMessage() {}

func (x *ProductAttrKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttrKeyReq.ProtoReflect.Descriptor instead.
func (*ProductAttrKeyReq) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{20}
}

func (x *ProductAttrKeyReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ProductAttrKeyReq) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

type ProductAttrKeyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrKeyId    int64  `protobuf:"varint,1,opt,name=attrKeyId,proto3" json:"attrKeyId,omitempty"`
	AttributeKey string `protobuf:"bytes,2,opt,name=attributeKey,proto3" json:"attributeKey,omitempty"`
}

func (x *ProductAttrKeyResp) Reset() {
	*x = ProductAttrKeyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttrKeyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttrKeyResp) ProtoMessage() {}

func (x *ProductAttrKeyResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttrKeyResp.ProtoReflect.Descriptor instead.
func (*ProductAttrKeyResp) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{21}
}

func (x *ProductAttrKeyResp) GetAttrKeyId() int64 {
	if x != nil {
		return x.AttrKeyId
	}
	return 0
}

func (x *ProductAttrKeyResp) GetAttributeKey() string {
	if x != nil {
		return x.AttributeKey
	}
	return ""
}

type ProductAttrValReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value  string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	SiteId int64  `protobuf:"varint,2,opt,name=siteId,proto3" json:"siteId,omitempty"`
}

func (x *ProductAttrValReq) Reset() {
	*x = ProductAttrValReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttrValReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttrValReq) ProtoMessage() {}

func (x *ProductAttrValReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttrValReq.ProtoReflect.Descriptor instead.
func (*ProductAttrValReq) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{22}
}

func (x *ProductAttrValReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ProductAttrValReq) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

type ProductAttrValResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrValId      int64  `protobuf:"varint,1,opt,name=attrValId,proto3" json:"attrValId,omitempty"`
	AttributeValue string `protobuf:"bytes,2,opt,name=attributeValue,proto3" json:"attributeValue,omitempty"`
}

func (x *ProductAttrValResp) Reset() {
	*x = ProductAttrValResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_shop_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttrValResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttrValResp) ProtoMessage() {}

func (x *ProductAttrValResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_shop_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttrValResp.ProtoReflect.Descriptor instead.
func (*ProductAttrValResp) Descriptor() ([]byte, []int) {
	return file_pb_shop_proto_rawDescGZIP(), []int{23}
}

func (x *ProductAttrValResp) GetAttrValId() int64 {
	if x != nil {
		return x.AttrValId
	}
	return 0
}

func (x *ProductAttrValResp) GetAttributeValue() string {
	if x != nil {
		return x.AttributeValue
	}
	return ""
}

var File_pb_shop_proto protoreflect.FileDescriptor

var file_pb_shop_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x62, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x73, 0x68, 0x6f, 0x70, 0x22, 0x24, 0x0a, 0x0a, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x6d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x9c, 0x02, 0x0a, 0x0e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01,
	0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x0f, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x08, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x01, 0x52, 0x08, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x49, 0x64,
	0x22, 0x39, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x22, 0x98, 0x02, 0x0a, 0x0f,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x74, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64,
	0x22, 0xde, 0x02, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x50, 0x0a, 0x10, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x96, 0x03, 0x0a, 0x10, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x54, 0x72, 0x65, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x42, 0x0a, 0x14,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xf4, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69, 0x74,
	0x65, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x46, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x74,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x92, 0x03, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x19,
	0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74,
	0x72, 0x73, 0x56, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x74,
	0x72, 0x73, 0x56, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x73, 0x6b, 0x75, 0x42, 0x61, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x73, 0x6b, 0x75, 0x42,
	0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x12, 0x29, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x48, 0x03, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09,
	0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x04, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73,
	0x6b, 0x75, 0x42, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x24, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x0a, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xc9, 0x07, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x61, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x42, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x78,
	0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x30,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4e,
	0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x73, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x73,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x69, 0x64, 0x65, 0x52, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x12, 0x68, 0x69, 0x64, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6b, 0x75, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x1a, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x22, 0x4e, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0xb0, 0x07, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42,
	0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x09, 0x6d,
	0x61, 0x69, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x09, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2f,
	0x0a, 0x10, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x10, 0x65, 0x78, 0x70, 0x6c,
	0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x88, 0x01, 0x01, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x55, 0x6e,
	0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x68,
	0x69, 0x64, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x68, 0x69, 0x64, 0x65, 0x52, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x68, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69,
	0x74, 0x65, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4e, 0x65, 0x67, 0x6f, 0x74,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x18, 0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x42, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x61,
	0x69, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65, 0x78, 0x70, 0x6c,
	0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x51, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x11, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x12, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x22, 0x41, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x56, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69,
	0x74, 0x65, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74,
	0x74, 0x72, 0x56, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x32, 0x42, 0x0a, 0x0b, 0x53, 0x68, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x33, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x12, 0x10,
	0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x32, 0xc0, 0x02, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x47, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x54, 0x72, 0x65, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73,
	0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x15, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a,
	0x12, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53,
	0x61, 0x76, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37,
	0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x12, 0x14, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x32, 0xbe, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x68, 0x6f, 0x77, 0x12, 0x14, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0b,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x61, 0x76, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x15, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0x98, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x40, 0x0a, 0x0b, 0x41, 0x74, 0x74, 0x72, 0x4b, 0x65, 0x79, 0x53, 0x61, 0x76, 0x65, 0x12, 0x17,
	0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x40, 0x0a, 0x0b, 0x41, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x53, 0x61, 0x76, 0x65,
	0x12, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x68, 0x6f, 0x70,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_shop_proto_rawDescOnce sync.Once
	file_pb_shop_proto_rawDescData = file_pb_shop_proto_rawDesc
)

func file_pb_shop_proto_rawDescGZIP() []byte {
	file_pb_shop_proto_rawDescOnce.Do(func() {
		file_pb_shop_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_shop_proto_rawDescData)
	})
	return file_pb_shop_proto_rawDescData
}

var file_pb_shop_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_pb_shop_proto_goTypes = []interface{}{
	(*MigrateReq)(nil),           // 0: shop.migrateReq
	(*MigrateReply)(nil),         // 1: shop.migrateReply
	(*CategoryGetReq)(nil),       // 2: shop.CategoryGetReq
	(*CategoryTreeReq)(nil),      // 3: shop.CategoryTreeReq
	(*CategoryShowReq)(nil),      // 4: shop.CategoryShowReq
	(*CategorySaveReq)(nil),      // 5: shop.CategorySaveReq
	(*CategoryDelReq)(nil),       // 6: shop.CategoryDelReq
	(*CategoryResp)(nil),         // 7: shop.CategoryResp
	(*CategoryListResp)(nil),     // 8: shop.CategoryListResp
	(*CategoryTreeData)(nil),     // 9: shop.CategoryTreeData
	(*CategoryTreeListResp)(nil), // 10: shop.CategoryTreeListResp
	(*ProductGetReq)(nil),        // 11: shop.ProductGetReq
	(*ProductShowReq)(nil),       // 12: shop.ProductShowReq
	(*ProductSku)(nil),           // 13: shop.ProductSku
	(*AttributesItem)(nil),       // 14: shop.AttributesItem
	(*Attributes)(nil),           // 15: shop.Attributes
	(*ProductResp)(nil),          // 16: shop.ProductResp
	(*ProductListResp)(nil),      // 17: shop.ProductListResp
	(*ProductSaveReq)(nil),       // 18: shop.ProductSaveReq
	(*ProductSaveResp)(nil),      // 19: shop.ProductSaveResp
	(*ProductAttrKeyReq)(nil),    // 20: shop.ProductAttrKeyReq
	(*ProductAttrKeyResp)(nil),   // 21: shop.ProductAttrKeyResp
	(*ProductAttrValReq)(nil),    // 22: shop.ProductAttrValReq
	(*ProductAttrValResp)(nil),   // 23: shop.ProductAttrValResp
}
var file_pb_shop_proto_depIdxs = []int32{
	7,  // 0: shop.CategoryListResp.data:type_name -> shop.CategoryResp
	9,  // 1: shop.CategoryTreeData.children:type_name -> shop.CategoryTreeData
	9,  // 2: shop.CategoryTreeListResp.data:type_name -> shop.CategoryTreeData
	14, // 3: shop.Attributes.items:type_name -> shop.AttributesItem
	15, // 4: shop.ProductResp.attributes:type_name -> shop.Attributes
	13, // 5: shop.ProductResp.productSku:type_name -> shop.ProductSku
	16, // 6: shop.ProductListResp.data:type_name -> shop.ProductResp
	13, // 7: shop.ProductSaveReq.productSku:type_name -> shop.ProductSku
	0,  // 8: shop.ShopService.AutoMigrate:input_type -> shop.migrateReq
	2,  // 9: shop.CategoryService.CategoryGet:input_type -> shop.CategoryGetReq
	3,  // 10: shop.CategoryService.CategoryTree:input_type -> shop.CategoryTreeReq
	4,  // 11: shop.CategoryService.CategoryShow:input_type -> shop.CategoryShowReq
	5,  // 12: shop.CategoryService.CategorySave:input_type -> shop.CategorySaveReq
	6,  // 13: shop.CategoryService.CategoryDel:input_type -> shop.CategoryDelReq
	11, // 14: shop.ProductService.ProductGet:input_type -> shop.ProductGetReq
	12, // 15: shop.ProductService.ProductShow:input_type -> shop.ProductShowReq
	18, // 16: shop.ProductService.ProductSave:input_type -> shop.ProductSaveReq
	20, // 17: shop.ProductAttrService.AttrKeySave:input_type -> shop.ProductAttrKeyReq
	22, // 18: shop.ProductAttrService.AttrValSave:input_type -> shop.ProductAttrValReq
	1,  // 19: shop.ShopService.AutoMigrate:output_type -> shop.migrateReply
	8,  // 20: shop.CategoryService.CategoryGet:output_type -> shop.CategoryListResp
	10, // 21: shop.CategoryService.CategoryTree:output_type -> shop.CategoryTreeListResp
	7,  // 22: shop.CategoryService.CategoryShow:output_type -> shop.CategoryResp
	7,  // 23: shop.CategoryService.CategorySave:output_type -> shop.CategoryResp
	7,  // 24: shop.CategoryService.CategoryDel:output_type -> shop.CategoryResp
	17, // 25: shop.ProductService.ProductGet:output_type -> shop.ProductListResp
	16, // 26: shop.ProductService.ProductShow:output_type -> shop.ProductResp
	19, // 27: shop.ProductService.ProductSave:output_type -> shop.ProductSaveResp
	21, // 28: shop.ProductAttrService.AttrKeySave:output_type -> shop.ProductAttrKeyResp
	23, // 29: shop.ProductAttrService.AttrValSave:output_type -> shop.ProductAttrValResp
	19, // [19:30] is the sub-list for method output_type
	8,  // [8:19] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_pb_shop_proto_init() }
func file_pb_shop_proto_init() {
	if File_pb_shop_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_shop_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryTreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryShowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategorySaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryTreeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryTreeListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductShowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributesItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSaveResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttrKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttrKeyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttrValReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_shop_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttrValResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pb_shop_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_pb_shop_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_pb_shop_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_pb_shop_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_pb_shop_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_pb_shop_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_shop_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_pb_shop_proto_goTypes,
		DependencyIndexes: file_pb_shop_proto_depIdxs,
		MessageInfos:      file_pb_shop_proto_msgTypes,
	}.Build()
	File_pb_shop_proto = out.File
	file_pb_shop_proto_rawDesc = nil
	file_pb_shop_proto_goTypes = nil
	file_pb_shop_proto_depIdxs = nil
}
