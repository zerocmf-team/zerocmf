// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	adminsite "zerocmf/service/tenant/api/internal/handler/admin/site"
	appsite "zerocmf/service/tenant/api/internal/handler/app/site"
	oauth "zerocmf/service/tenant/api/internal/handler/oauth"
	"zerocmf/service/tenant/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/oauth/token",
				Handler: oauth.TokenHandler(serverCtx),
			},
		},
		rest.WithPrefix("/"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/api/current_user",
					Handler: oauth.CurrentUserHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: adminsite.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:siteId",
					Handler: adminsite.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/migrate/:siteId",
					Handler: adminsite.AutoMigrateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: adminsite.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:siteId",
					Handler: adminsite.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:siteId",
					Handler: adminsite.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/site"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/domain/:domain",
				Handler: appsite.DomainHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/site"),
	)
}
