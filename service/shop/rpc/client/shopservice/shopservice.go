// Code generated by goctl. DO NOT EDIT.
// Source: shop.proto

package shopservice

import (
	"context"

	"zerocmf/service/shop/rpc/pb/shop"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Attributes           = shop.Attributes
	AttributesItem       = shop.AttributesItem
	CategoryDelReq       = shop.CategoryDelReq
	CategoryGetReq       = shop.CategoryGetReq
	CategoryListResp     = shop.CategoryListResp
	CategoryResp         = shop.CategoryResp
	CategorySaveReq      = shop.CategorySaveReq
	CategoryShowReq      = shop.CategoryShowReq
	CategoryTreeData     = shop.CategoryTreeData
	CategoryTreeListResp = shop.CategoryTreeListResp
	CategoryTreeReq      = shop.CategoryTreeReq
	MigrateReply         = shop.MigrateReply
	MigrateReq           = shop.MigrateReq
	ProductAttrKeyReq    = shop.ProductAttrKeyReq
	ProductAttrKeyResp   = shop.ProductAttrKeyResp
	ProductAttrValReq    = shop.ProductAttrValReq
	ProductAttrValResp   = shop.ProductAttrValResp
	ProductGetReq        = shop.ProductGetReq
	ProductListResp      = shop.ProductListResp
	ProductResp          = shop.ProductResp
	ProductSaveReq       = shop.ProductSaveReq
	ProductSaveResp      = shop.ProductSaveResp
	ProductShowReq       = shop.ProductShowReq
	ProductSku           = shop.ProductSku

	ShopService interface {
		AutoMigrate(ctx context.Context, in *MigrateReq, opts ...grpc.CallOption) (*MigrateReply, error)
	}

	defaultShopService struct {
		cli zrpc.Client
	}
)

func NewShopService(cli zrpc.Client) ShopService {
	return &defaultShopService{
		cli: cli,
	}
}

func (m *defaultShopService) AutoMigrate(ctx context.Context, in *MigrateReq, opts ...grpc.CallOption) (*MigrateReply, error) {
	client := shop.NewShopServiceClient(m.cli.Conn())
	return client.AutoMigrate(ctx, in, opts...)
}
