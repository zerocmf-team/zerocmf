// Code generated by goctl. DO NOT EDIT.
package types

import (
	"github.com/jinzhu/copier"
	bsData "zerocmf/common/bootstrap/data"
)

type Response struct {
	Code int         `json:"code"`
	Msg  string      `json:"msg"`
	Data interface{} `json:"data"`
}

type SiteGetReq struct {
}

type SiteShowReq struct {
	SiteId int64 `path:"siteId,optional"`
}

type SiteSaveReq struct {
	SiteId    int     `path:"siteId,optional"`
	Name      string  `json:"name"`
	Desc      string  `json:"desc,optional"`
	Domain    string  `json:"domain,optional"`
	Dsn       string  `json:"dsn,optional"`
	ListOrder float64 `json:"listOrder,optional"`
	Status    *int    `json:"status,optional"`
}

type FormGetReq struct {
}

type FormShowReq struct {
	FormId string `path:"formId,optional"`
}

type FormSaveReq struct {
	Id          string  `json:"id,optional"`
	ParentId    string  `json:"parentId,optional"`
	Name        string  `json:"name"`
	Icon        string  `json:"icon,optional"`
	MenuType    int     `json:"menuType,optional"`
	HideInMenu  int     `json:"hideInMenu,optional"`
	Description string  `json:"description,optional"`
	Schema      string  `json:"schema,optional"`
	ListOrder   float64 `json:"listOrder,optional"`
	Status      int     `json:"status,optional"`
}

type FormDatasReq struct {
	FormId string `path:"formId,optional"`
}

type FormDataShowReq struct {
	FormId string `path:"formId,optional"`
}

type FormDataSaveReq struct {
	Id           string `path:"Id,optional"`
	FormId       string `json:"formId"`
	FormDataJson string `json:"formDataJson"`
}

type RegionGetReq struct {
}

type UserAdminListReq struct {
	UserType     string `form:"userType,optional"`
	UserLogin    string `form:"userLogin,optional"`
	UserNickname string `form:"userNickname,optional"`
	UserEmail    string `form:"userEmail,optional"`
}

type UserAdminShowReq struct {
	Id string `path:"id,optional"`
}

type UserAdminSaveReq struct {
	Id           string   `path:"id,optional"`
	UserLogin    string   `json:"userLogin,optional"`
	UserPass     *string  `json:"userPass,optional"`
	UserEmail    string   `json:"userEmail,optional"`
	Mobile       string   `json:"mobile,optional"`
	UserRealname string   `json:"userRealname,optional"`
	RoleIds      []string `json:"roleIds,optional"`
}

type UserAdminRoleList struct {
	Name         string `form:"name,optional"`
	Status       *int   `form:"status,optional"`
	NoPagination *int   `form:"noPagination,optional"`
}

type UserAdminRoleShow struct {
	Id string `path:"id"`
}

type UserAdminRoleSave struct {
	Id     string   `path:"id,optional"`
	Name   string   `json:"name"`
	Remark string   `json:"remark,optional"`
	Status *int     `json:"status,optional"`
	Access []string `json:"access,optional"`
}

func (r *Response) Success(msg string, data interface{}) {
	success := new(bsData.Rest).Success(msg, data)
	copier.Copy(&r, &success)
	return
}

func (r *Response) Error(msg string, data interface{}) {
	err := new(bsData.Rest).Error(msg, data)
	copier.Copy(&r, &err)
	return
}
