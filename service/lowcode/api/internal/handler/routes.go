// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	adminaccount "zerocmf/service/lowcode/api/internal/handler/admin/account"
	adminform "zerocmf/service/lowcode/api/internal/handler/admin/form"
	adminformData "zerocmf/service/lowcode/api/internal/handler/admin/formData"
	adminrole "zerocmf/service/lowcode/api/internal/handler/admin/role"
	adminsite "zerocmf/service/lowcode/api/internal/handler/admin/site"
	appregion "zerocmf/service/lowcode/api/internal/handler/app/region"
	"zerocmf/service/lowcode/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: adminsite.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:siteId",
					Handler: adminsite.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: adminsite.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:siteId",
					Handler: adminsite.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:siteId",
					Handler: adminsite.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/site"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware, serverCtx.SiteMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: adminform.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:formId",
					Handler: adminform.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: adminform.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:formId",
					Handler: adminform.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:formId",
					Handler: adminform.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/form"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware, serverCtx.SiteMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: adminformData.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: adminformData.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: adminformData.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: adminformData.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: adminformData.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/formData"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/",
				Handler: appregion.GetHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/region"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware, serverCtx.SiteMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: adminaccount.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: adminaccount.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: adminaccount.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: adminaccount.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: adminaccount.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/account"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware, serverCtx.SiteMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: adminrole.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: adminrole.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: adminrole.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: adminrole.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: adminrole.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/role"),
	)
}
