// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	adminaccount "zerocmf/service/user/api/internal/handler/admin/account"
	adminauthAccess "zerocmf/service/user/api/internal/handler/admin/authAccess"
	adminauthorize "zerocmf/service/user/api/internal/handler/admin/authorize"
	admindepartment "zerocmf/service/user/api/internal/handler/admin/department"
	adminrole "zerocmf/service/user/api/internal/handler/admin/role"
	app "zerocmf/service/user/api/internal/handler/app"
	oauth "zerocmf/service/user/api/internal/handler/oauth"
	"zerocmf/service/user/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/current_user",
					Handler: adminaccount.CurrentUserHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: adminaccount.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/role/list",
					Handler: adminaccount.GetListByRoleHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: adminaccount.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: adminaccount.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: adminaccount.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/firstOrCreate",
					Handler: adminaccount.FirstOrCreateHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: adminaccount.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/account"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: adminrole.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: adminrole.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: adminrole.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/role"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: adminauthorize.GetHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/authorize"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: adminauthAccess.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: adminauthAccess.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: adminauthAccess.EditHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/auth_access"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/",
				Handler: app.IndexHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/save",
				Handler: app.SaveHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/oauth/token",
				Handler: oauth.TokenHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/oauth/refresh",
				Handler: oauth.RefreshHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/token",
				Handler: oauth.TokenRequestHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/validation/token",
				Handler: oauth.ValidationHandler(serverCtx),
			},
		},
		rest.WithPrefix("/"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: admindepartment.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: admindepartment.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: admindepartment.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: admindepartment.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: admindepartment.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/department"),
	)
}
