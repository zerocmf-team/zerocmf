// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	portaladminapp "zerocmf/service/portal/api/internal/handler/portal/admin/app"
	portaladminapp_page "zerocmf/service/portal/api/internal/handler/portal/admin/app_page"
	portaladminarticle "zerocmf/service/portal/api/internal/handler/portal/admin/article"
	portaladmincategory "zerocmf/service/portal/api/internal/handler/portal/admin/category"
	portaladminform "zerocmf/service/portal/api/internal/handler/portal/admin/form"
	portaladminnav "zerocmf/service/portal/api/internal/handler/portal/admin/nav"
	portaladminnavItem "zerocmf/service/portal/api/internal/handler/portal/admin/navItem"
	portaladmintag "zerocmf/service/portal/api/internal/handler/portal/admin/tag"
	portaladmintheme "zerocmf/service/portal/api/internal/handler/portal/admin/theme"
	portaladminthemeFile "zerocmf/service/portal/api/internal/handler/portal/admin/themeFile"
	portalappapp_page "zerocmf/service/portal/api/internal/handler/portal/app/app_page"
	portalappbreadcrumb "zerocmf/service/portal/api/internal/handler/portal/app/breadcrumb"
	portalappcategory "zerocmf/service/portal/api/internal/handler/portal/app/category"
	portalappcomment "zerocmf/service/portal/api/internal/handler/portal/app/comment"
	portalappform "zerocmf/service/portal/api/internal/handler/portal/app/form"
	portalapplist "zerocmf/service/portal/api/internal/handler/portal/app/list"
	portalappnav "zerocmf/service/portal/api/internal/handler/portal/app/nav"
	portalapppost "zerocmf/service/portal/api/internal/handler/portal/app/post"
	portalappthemeFile "zerocmf/service/portal/api/internal/handler/portal/app/themeFile"
	route "zerocmf/service/portal/api/internal/handler/route"
	"zerocmf/service/portal/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: portaladmincategory.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/list",
					Handler: portaladmincategory.ListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: portaladmincategory.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: portaladmincategory.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: portaladmincategory.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/options",
					Handler: portaladmincategory.OptionsHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: portaladmincategory.DeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/",
					Handler: portaladmincategory.DeletesHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/category"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: portalapplist.ShowHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/list"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: portalappbreadcrumb.BreadcrumbHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/breadcrumb"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: portalappcategory.TreeListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/category/trees"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: portaladminarticle.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: portaladminarticle.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: portaladminarticle.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: portaladminarticle.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: portaladminarticle.DeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/",
					Handler: portaladminarticle.DeletesHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/article"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/",
				Handler: portalapplist.GetHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/search",
				Handler: portalapplist.SearchHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/list"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: portalapppost.ShowHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/post"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/like/:id",
				Handler: portalapppost.LikeHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/is_like/:id",
				Handler: portalapppost.IsLikeHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/favorite/:id",
				Handler: portalapppost.FavoriteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/is_favorite/:id",
				Handler: portalapppost.IsFavoriteHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/post"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: portaladmintheme.InitHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/theme"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/list",
					Handler: portaladminthemeFile.ListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: portaladminthemeFile.SaveHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/theme_file"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/theme_files",
				Handler: portalappthemeFile.ListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/theme_file",
				Handler: portalappthemeFile.DetailHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: portaladmintag.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: portaladmintag.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/tag"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/",
				Handler: route.ListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/route"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/",
				Handler: portaladminnav.GetHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: portaladminnav.ShowHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/",
				Handler: portaladminnav.StoreHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/:id",
				Handler: portaladminnav.EditHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/:id",
				Handler: portaladminnav.DeleteHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/admin/nav"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:navId",
				Handler: portaladminnavItem.GetHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/",
				Handler: portaladminnavItem.StoreHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/:id",
				Handler: portaladminnavItem.EditHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/:id",
				Handler: portaladminnavItem.DelHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/urls",
				Handler: portaladminnavItem.OptionsUrlsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/options",
				Handler: portaladminnavItem.OptionsListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/admin/nav_items"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:navId",
				Handler: portalappnav.ListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/nav"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: portalappcomment.GetHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/comment"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: portalappcomment.CommentHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/like/:id",
					Handler: portalappcomment.LikeHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/reply/:id",
					Handler: portalappcomment.ReplyHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/reply/like/:id",
					Handler: portalappcomment.ReplyLikeHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/app/comment"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: portaladminapp.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: portaladminapp.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: portaladminapp.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: portaladminapp.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: portaladminapp.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/app"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/all/:appId",
					Handler: portaladminapp_page.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: portaladminapp_page.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: portaladminapp_page.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: portaladminapp_page.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: portaladminapp_page.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/app_page"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/all/:appId",
				Handler: portalappapp_page.GetHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: portalappapp_page.ShowHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/app_page"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: portaladminform.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: portaladminform.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: portaladminform.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: portaladminform.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: portaladminform.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/form"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/:formId",
				Handler: portalappform.StoreHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/form"),
	)
}
