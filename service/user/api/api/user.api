syntax = "v1"

type (
    ListReq {
        UserType string `form:"user_type,optional"`
        UserLogin string `form:"user_login,optional"`
        UserNickname string `form:"user_nickname,optional"`
        UserEmail string `form:"user_email,optional"`
    }

    ListByRoleReq {
        roleIds []string `form:"roleIds"`
        current int `form:"current,optional"`
        pageSize int `form:"pageSize,optional"`
    }

    OneReq {
        Id string `path:"id,optional"`
    }

    AdminStoreReq {
        UserLogin string `json:"user_login,optional"`
        UserPass string `json:"user_pass,optional"`
        UserEmail string `json:"user_email,optional"`
        Mobile string `json:"mobile,optional"`
        UserRealname string `json:"user_realname,optional"`
        RoleIds []int `json:"role_ids,optional"`
    }

    AdminSaveReq {
        Id string `path:"id,optional"`
        UserLogin string `json:"user_login,optional"`
        UserPass string `json:"user_pass,optional"`
        UserEmail string `json:"user_email,optional"`
        Mobile string `json:"mobile,optional"`
        UserRealname string `json:"user_realname,optional"`
        RoleIds []int `json:"role_ids,optional"`
    }

    RoleGet {
        Status string `form:"status,optional"`
        Name string `form:"name,optional"`
    }

    RoleDelete {
        Id string `path:"id,optional"`
        ids []string `form:"ids,optional"`
    }

    AccessStore {
        Name string `json:"name" validate:"required" label:"姓名"`
        Remark string `json:"remark,optional"`
        RoleAccess []string `json:"role_access,optional"`
    }

    AccessEdit {
        Id string `path:"id,optional"`
        Name string `json:"name"`
        Remark string `json:"remark"`
        RoleAccess []string `json:"role_access"`
    }

    AppSaveReq {
        Gender int `json:"gender,optional"`
        BirthdayTime string `json:"birthday_time,optional"`
        UserPass string `json:"user_pass,optional"`
        UserNickname string `json:"user_nickname,optional"`
        UserRealName string `json:"user_realname,optional"`
        UserEmail string `json:"user_email,optional"`
        UserUrl string `json:"user_url,optional"`
        Avatar string `json:"avatar,optional"`
        Signature string `json:"signature,optional"`
        Mobile string `json:"mobile,optional"`
    }

    TokenReq {
        Usermame string `json:"username,optional"`
        Password string `json:"password,optional"`
    }

    RefreshReq {
        refreshToken string `json:"refreshToken,optional"`
    }

    ValidationReq {
        TenantId string `form:"tenant_id,optional"`
    }
)


// 账号相关
@server(
    group: admin/account
    prefix: /api/v1/admin/account
    middleware: AuthMiddleware
)

service user {
    @handler CurrentUser
    get /current_user returns (Response)

    @handler Get
    get / (ListReq) returns (Response)

    @handler GetListByRole
    get /role/list (ListByRoleReq) returns (Response)

    @handler Show
    get /:id (OneReq) returns (Response)

    @handler Store
    post / (AdminStoreReq) returns (Response)

    @handler Edit
    post /:id (AdminSaveReq) returns (Response)

    @handler FirstOrCreate
    post /firstOrCreate (AdminStoreReq) returns (Response)

    @handler Delete
    delete /:id (OneReq) returns (Response)
}

// 角色相关
@server(
    group: admin/role
    prefix: /api/v1/admin/role
    middleware: AuthMiddleware
)

service user {
    @handler Get
    get / (RoleGet) returns (Response)

    @handler Show
    get /:id (OneReq) returns (Response)

    @handler Delete
    delete /:id (RoleDelete) returns (Response)
}

// 权限相关
@server(
    group: admin/authorize
    prefix: /api/v1/admin/authorize
    middleware: AuthMiddleware
)

service user {
    @handler Get
    get / returns (Response)
}

// 权限相关

@server(
    group: admin/authAccess
    prefix: /api/v1/admin/auth_access
    middleware: AuthMiddleware
)

service user {
    @handler Show
    get /:id (OneReq) returns (Response)

    @handler Store
    post / (AccessStore) returns (Response)

    @handler Edit
    post /:id (AccessEdit) returns (Response)
}

@server(
    group: app
    prefix: /api/v1/app
)

service user {
    @handler Index
    get / returns (Response)

    @handler Save
    get /save (AppSaveReq) returns (Response)
}

@server(
    group: oauth
    prefix: /
)

service user {
    @handler Token
    post /api/oauth/token (TokenReq) returns (Response)

    @handler Refresh
    post /api/oauth/refresh (RefreshReq) returns (Response)

    @handler TokenRequest
    post /token returns (Response)

    @handler Validation
    post /api/validation/token (ValidationReq) returns (Response)
}