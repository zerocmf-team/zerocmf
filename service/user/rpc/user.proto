/**
** @创建时间: 2022/02/24 12:48
** @作者　　: return
** @描述　　:
 */


syntax = "proto3";
package user;
option go_package = "./user";

message UserRequest {
  string userId = 1;
  string userLogin = 2;
  string siteId = 3;
}

message  UserReply {
  int64 id = 1;
  int32 userType = 2;
  int32 gender = 3;
  int64 birthday = 4;
  int32 score = 5;
  int32 coin = 6;
  int32 exp = 7;
  float balance = 8;
  string userLogin = 9;
  string userPass = 10;
  string userNickname = 11;
  string userRealName = 12;
  string userEmail = 13;
  string userUrl = 14;
  string avatar = 15;
  string signature = 16;
  string lastLoginIp = 18;
  string mobile = 19;
  int64 lastLoginAt = 20;
  int64 createAt = 21;
  int64 updateAt = 22;
  string lastLoginTime = 23;
  string createTime = 24;
  int64 deleteAt = 25;
  int32 userStatus = 26;
  string siteId = 27;
  string errorMsg = 28;
}

message LoginReq {
  string userLogin = 1;
  string userPass = 2;
  string siteId = 3;
}

// The request message containing the user's name.
message OauthRequest {
  string token = 1;
  string tenantId = 2;
}

// The response message containing the greetings
message OauthReply {
  string userId = 1;
}

message menu {
  int64 id = 1;
  int64 parentId = 2;
  int64 menuType = 3;
  string name = 4;
  string path = 5;
  string icon = 6;
  int64 hideInMenu = 7;
  double listOrder = 8;
}

message NewEnforceRequest {
  string tenantId = 1;
  string userId = 2;
  repeated menu menus = 3;
}

message  NewEnforcerReply {
  repeated menu menus = 2;
}

message  siteReq {
  int64 siteId = 1;
}

message  siteReply {

}

service user {
  rpc Get (UserRequest) returns (UserReply) {}

  rpc RamLogin (LoginReq) returns (UserReply) {}

  rpc ValidationJwt (OauthRequest) returns (OauthReply) {}

  rpc NewEnforce(NewEnforceRequest) returns (NewEnforcerReply) {}

  rpc autoMigrate(siteReq) returns(siteReply);
}

