// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	adminapp "zerocmf/service/portal/api/internal/handler/admin/app"
	adminapp_page "zerocmf/service/portal/api/internal/handler/admin/app_page"
	adminarticle "zerocmf/service/portal/api/internal/handler/admin/article"
	admincategory "zerocmf/service/portal/api/internal/handler/admin/category"
	adminform "zerocmf/service/portal/api/internal/handler/admin/form"
	adminnav "zerocmf/service/portal/api/internal/handler/admin/nav"
	adminnavItem "zerocmf/service/portal/api/internal/handler/admin/navItem"
	admintag "zerocmf/service/portal/api/internal/handler/admin/tag"
	admintheme "zerocmf/service/portal/api/internal/handler/admin/theme"
	adminthemeFile "zerocmf/service/portal/api/internal/handler/admin/themeFile"
	appapp_page "zerocmf/service/portal/api/internal/handler/app/app_page"
	appbreadcrumb "zerocmf/service/portal/api/internal/handler/app/breadcrumb"
	appcategory "zerocmf/service/portal/api/internal/handler/app/category"
	appcomment "zerocmf/service/portal/api/internal/handler/app/comment"
	appform "zerocmf/service/portal/api/internal/handler/app/form"
	applist "zerocmf/service/portal/api/internal/handler/app/list"
	appnav "zerocmf/service/portal/api/internal/handler/app/nav"
	apppost "zerocmf/service/portal/api/internal/handler/app/post"
	approute "zerocmf/service/portal/api/internal/handler/app/route"
	appthemeFile "zerocmf/service/portal/api/internal/handler/app/themeFile"
	"zerocmf/service/portal/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: admincategory.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/list",
					Handler: admincategory.ListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: admincategory.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: admincategory.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: admincategory.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/options",
					Handler: admincategory.OptionsHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: admincategory.DeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/",
					Handler: admincategory.DeletesHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/category"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: applist.ShowHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/list"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: appbreadcrumb.BreadcrumbHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/breadcrumb"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: appcategory.TreeListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/category/trees"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: adminarticle.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: adminarticle.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: adminarticle.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: adminarticle.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: adminarticle.DeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/",
					Handler: adminarticle.DeletesHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/article"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/",
				Handler: applist.GetHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/search",
				Handler: applist.SearchHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/list"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: apppost.ShowHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/post"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/like/:id",
				Handler: apppost.LikeHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/is_like/:id",
				Handler: apppost.IsLikeHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/favorite/:id",
				Handler: apppost.FavoriteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/is_favorite/:id",
				Handler: apppost.IsFavoriteHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/post"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: admintheme.InitHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/theme"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/list",
					Handler: adminthemeFile.ListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: adminthemeFile.SaveHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/theme_file"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/theme_files",
				Handler: appthemeFile.ListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/theme_file",
				Handler: appthemeFile.DetailHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: admintag.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: admintag.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/tag"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/",
				Handler: approute.ListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/route"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/",
				Handler: adminnav.GetHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: adminnav.ShowHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/",
				Handler: adminnav.StoreHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/:id",
				Handler: adminnav.EditHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/:id",
				Handler: adminnav.DeleteHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/admin/nav"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:navId",
				Handler: adminnavItem.GetHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/",
				Handler: adminnavItem.StoreHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/:id",
				Handler: adminnavItem.EditHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/:id",
				Handler: adminnavItem.DelHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/urls",
				Handler: adminnavItem.OptionsUrlsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/options",
				Handler: adminnavItem.OptionsListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/admin/nav_items"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:navId",
				Handler: appnav.ListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/nav"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: appcomment.GetHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/comment"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: appcomment.CommentHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/like/:id",
					Handler: appcomment.LikeHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/reply/:id",
					Handler: appcomment.ReplyHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/reply/like/:id",
					Handler: appcomment.ReplyLikeHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/app/comment"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: adminapp.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: adminapp.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: adminapp.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: adminapp.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: adminapp.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/app"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/all/:appId",
					Handler: adminapp_page.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: adminapp_page.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: adminapp_page.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: adminapp_page.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: adminapp_page.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/app_page"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/all/:appId",
				Handler: appapp_page.GetHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: appapp_page.ShowHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/app_page"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: adminform.GetHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: adminform.ShowHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: adminform.StoreHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/:id",
					Handler: adminform.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:id",
					Handler: adminform.DeleteHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin/form"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/:formId",
				Handler: appform.StoreHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/app/form"),
	)
}
