// Code generated by goctl. DO NOT EDIT.
// Source: tenant.proto

package tenantclient

import (
	"context"

	"zerocmf/service/tenant/rpc/types/tenant"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CurrentUserReq = tenant.CurrentUserReq
	UserReply      = tenant.UserReply

	Tenant interface {
		Get(ctx context.Context, in *CurrentUserReq, opts ...grpc.CallOption) (*UserReply, error)
	}

	defaultTenant struct {
		cli zrpc.Client
	}
)

func NewTenant(cli zrpc.Client) Tenant {
	return &defaultTenant{
		cli: cli,
	}
}

func (m *defaultTenant) Get(ctx context.Context, in *CurrentUserReq, opts ...grpc.CallOption) (*UserReply, error) {
	client := tenant.NewTenantClient(m.cli.Conn())
	return client.Get(ctx, in, opts...)
}
